name: CI/CD using github actions & docker

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          submodules: true
      # Gradlew 실행 허용
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew
      # JDK 21 세팅
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      # 환경 변수 설정
      - name: Set environment values
        run: |
          cd ./src/main/resources
          touch ./env.properties
          echo "${{ secrets.ENV }}" > ./env.properties
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.12.0' # 사용 중인 Node.js 버전에 맞게 설정

      - name: Install dependencies
        run: npm install
        working-directory: src/main/frontend # React 프로젝트 디렉토리 경로로 수정

      - name: Build React App
        run: npm run build
        working-directory: src/main/frontend

      # Gradle build (Test 제외)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build -x test

      # Docker build
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_REPOSITORY_NAME }} .
          docker tag ${{ secrets.DOCKERHUB_REPOSITORY_NAME }} ${{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${GITHUB_SHA::7}
          docker push {{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${GITHUB_SHA::7}

      - name: Docker Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_INSTANCE_OPEN_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: GITHUB_SHA
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${GITHUB_SHA::7}
            sudo docker tag  ${{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${GITHUB_SHA::7} ${{ secrets.DOCKERHUB_IMAGE_NAME }}
            sudo docker-compose up -d